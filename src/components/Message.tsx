import { Box, Button, Center, Container, Flex, Grid, Text, GridItem, Square, Tab, TabList, TabPanel, TabPanels, Tabs, Input, DrawerBody, Avatar, AvatarBadge, Spacer, IconButton } from "@chakra-ui/react";
import { useState } from "react";
import { BiSend } from "react-icons/bi";


export function Message() {
    const [currentid, setcurrentid] = useState('')

    const obj = [{
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"
    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"

    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"

    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"

    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"
    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"

    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"

    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"

    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"
    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"

    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"

    }, {
        name: "Toan ngu",
        avt: "http://localhost:5000/uploads/1700827287066.jpeg",
        last: "last 1",
        id: "65544fb50870434af07d0f66"
    }]

    const mess = [{
        content: "D√π xe g·∫∑p s·ª± c·ªë g√¨, h√£y c·ªë g·∫Øng ƒë∆∞a xe n·∫±m tr·ªçn v·∫πn trong l√†n d·ª´ng kh·∫©n c·∫•p, kh√¥ng l·∫•n ra l√†n xe ch·∫°y. N·∫øu xe h·∫øt xƒÉng gi·ªØa ƒë∆∞·ªùng hay v√¨ m·ªôt l√Ω do n√†o ƒë√≥ ƒë·ªông c∆° kh√¥ng th·ªÉ kh·ªüi ƒë·ªông th√¨ th·∫≠m ch√≠ b·∫°n ph·∫£i ƒë·∫©y xe v√†o l·ªÅ ƒë∆∞·ªùng. V√¨ khi m·ªôt ph·∫ßn th√¢n xe v·∫´n n·∫±m tr√™n l√†n xe ch·∫°y th√¨ r·∫•t kh√≥ cho c√°c ph∆∞∆°ng ti·ªán kh√°c ƒëi·ªÅu ti·∫øt t·ªëc ƒë·ªô c≈©ng nh∆∞ chuy·ªÉn l√†n.",
    }, {
        content: "D√π xe g·∫∑p s·ª± c·ªë g√¨, h√£y c·ªë g·∫Øng ƒë∆∞a xe n·∫±m tr·ªçn v·∫πn trong l√†n d·ª´ng kh·∫©n c·∫•p, kh√¥ng l·∫•n ra l√†n xe ch·∫°y. N·∫øu xe h·∫øt xƒÉng gi·ªØa ƒë∆∞·ªùng hay v√¨ m·ªôt l√Ω do n√†o ƒë√≥ ƒë·ªông c∆° kh√¥ng th·ªÉ kh·ªüi ƒë·ªông th√¨ th·∫≠m ch√≠ b·∫°n ph·∫£i ƒë·∫©y xe v√†o l·ªÅ ƒë∆∞·ªùng. V√¨ khi m·ªôt ph·∫ßn th√¢n xe v·∫´n n·∫±m tr√™n l√†n xe ch·∫°y th√¨ r·∫•t kh√≥ cho c√°c ph∆∞∆°ng ti·ªán kh√°c ƒëi·ªÅu ti·∫øt t·ªëc ƒë·ªô c≈©ng nh∆∞ chuy·ªÉn l√†n.",
    }, {
        content: "D√π xe g·∫∑p s·ª± c·ªë g√¨, h√£y c·ªë g·∫Øng ƒë∆∞a xe n·∫±m tr·ªçn v·∫πn trong l√†n d·ª´ng kh·∫©n c·∫•p, kh√¥ng l·∫•n ra l√†n xe ch·∫°y. N·∫øu xe h·∫øt xƒÉng gi·ªØa ƒë∆∞·ªùng hay v√¨ m·ªôt l√Ω do n√†o ƒë√≥ ƒë·ªông c∆° kh√¥ng th·ªÉ kh·ªüi ƒë·ªông th√¨ th·∫≠m ch√≠ b·∫°n ph·∫£i ƒë·∫©y xe v√†o l·ªÅ ƒë∆∞·ªùng. V√¨ khi m·ªôt ph·∫ßn th√¢n xe v·∫´n n·∫±m tr√™n l√†n xe ch·∫°y th√¨ r·∫•t kh√≥ cho c√°c ph∆∞∆°ng ti·ªán kh√°c ƒëi·ªÅu ti·∫øt t·ªëc ƒë·ªô c≈©ng nh∆∞ chuy·ªÉn l√†n.",
    }]

    return (
        <Flex color='white' h="100vh">
            <Box minW='70' maxW='80' border="1px" borderColor="#b9c9c9">
                <Flex direction="column" backgroundColor={"white"} >
                    <Button my={2} backgroundColor={"white"} size="lg">üí¨</Button>
                    <Button my={2} backgroundColor={"white"} size="lg">üë•</Button>
                    <Button my={2} backgroundColor={"white"} size="lg">üèõÔ∏è</Button>
                    <Spacer />
                    <Avatar ml={3} marginTop={500} mt="auto" alignItems={"bottom"}></Avatar>
                </Flex>
            </Box>
            <Box minW='350' border="1px" borderColor="#b9c9c9" overflowY="auto"
                __css={{
                    '&::-webkit-scrollbar': {
                        w: '2',
                    },
                    '&::-webkit-scrollbar-track': {
                        w: '6',
                    },
                    '&::-webkit-scrollbar-thumb': {
                        borderRadius: '10',
                        bg: `gray.100`,
                    },
                }}>
                <Flex direction="column" >
                    <Flex >
                        <Text color={"black"} as={"b"} ml={5} mt={3}>Chat</Text>
                        <Button mt={1} backgroundColor={"white"} ml={"auto"} marginRight={3}>‚úçüèª</Button>
                    </Flex>

                    <Input ml={5} mt={5} placeholder="Search" color={"black"} w={300} borderRadius={30}></Input>

                    <Flex direction="column" >

                        {obj.map((x) =>
                            <Flex my={1} pb={2} _hover={{
                                bgGradient: "linear(to-l, #e1e1e1, #8b8b8b)"

                            }}
                                cursor={"pointer"}>
                                <Avatar src={""} mt={3} ml={5}>
                                    <AvatarBadge boxSize="1.5em" bg='green.500' />
                                </Avatar>
                                <Flex direction="column" color={"black"}>
                                    <Text as={"b"} pl={2} mt={3} fontSize={15}> {x.name}</Text>
                                    <Text as={"i"} pl={0} fontSize={15}>{x.last}</Text>
                                </Flex>
                            </Flex>
                        )}


                    </Flex>

                </Flex>
            </Box>


            <Box flex='1' border="1px" borderColor="#b9c9c9" color={"black"} overflowY="auto"
                __css={{
                    '&::-webkit-scrollbar': {
                        w: '2',
                    },
                    '&::-webkit-scrollbar-track': {
                        w: '6',
                    },
                    '&::-webkit-scrollbar-thumb': {
                        borderRadius: '10',
                        bg: `gray.100`,
                    },
                }} >
                <Flex direction="column" alignItems="flex-start" justifyContent="flex-end"  >
                    <Flex position="absolute" bottom={0} backgroundColor="white" width="-webkit-fill-available" mt={20} >
                        <Button backgroundColor="white" color={"gray"} minW={5} display="flex" px={5} borderRadius={50}>‚ûï</Button>
                        <Button backgroundColor="white" color={"gray"} minW={5} display="flex" px={5} borderRadius={50}>‚ûï</Button>
                        <Button backgroundColor="white" color={"gray"} minW={5} display="flex" px={5} borderRadius={50}>‚ûï</Button>
                        <Button backgroundColor="white" color={"gray"} minW={5} display="flex" px={5} borderRadius={50}>‚ûï</Button>

                        <Input backgroundColor="white" mr={3} border="1px" borderColor="#b9c9c9" textColor={"gray"} color={"gray"} width="100%" display="flex" placeholder="Enter your reply" borderRadius={50}  ></Input>

                        <Button backgroundColor="white" color={"gray"} minW={5} display="flex" px={5} borderRadius={50}>üòã</Button>
                        {/* <Button backgroundColor="white" color={"gray"} minW={5} display="flex" px={5} borderRadius={50}></Button> */}
                        <IconButton
                            variant='outline'
                            colorScheme='teal'
                            aria-label='Call Sage'
                            fontSize='20px'
                            px={3}
                            mr={1}
                            icon={<BiSend />}
                        />

                    </Flex>
                    {mess.map((x) => (
                        <Box
                            bottom={0}
                            textAlign="start"
                            mx={2}
                            maxW={800}
                            my={1}
                            borderRadius="30"
                            ml="auto"
                            bg="tomato"
                            w="fit-content"
                            px={7}
                            py={2}
                            left={"0"}

                            fontSize={15}
                        >
                            {x.content}
                        </Box>
                    ))}
                    {mess.reverse().map((x) => (
                        <Box
                            bottom={0}
                            textAlign="start"
                            mx={2}
                            maxW={800}
                            my={1}
                            borderRadius="30"
                            ml="auto"
                            bg="tomato"
                            w="fit-content"
                            px={7}
                            py={2}
                            fontSize={15}
                        >
                            {x.content}
                        </Box>
                    ))}
                </Flex>
            </Box>
        </Flex >
    );
}